{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About NetMedEx","text":"<p>NetMedEx is a Python-based tool designed to extract BioConcept entities (e.g., genes, diseases, chemicals, and species) from Pubtator files generated by Pubtator3. It calculates the frequency of BioConcept pairs (e.g., gene-gene, gene-chemical, chemical-disease) based on co-mentions in publications and generates a co-mention interaction network. These networks can be viewed in a browser or imported into Cytoscape for advanced visualization and analysis.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>NetMedEx offers four ways for users to interact with the tool:</p> <ol> <li>Web Application (via Docker)</li> <li>Web Application (Local)</li> <li>Command-Line Interface (CLI)</li> <li>Python API</li> </ol>"},{"location":"api_usage/","title":"Python API Usage","text":"<p>NetMedEx supports Python 3.11 and above. This page demonstrates how to use the library programmatically. The <code>PubTatorAPI</code> class retrieves articles from PubTator3, and <code>PubTatorGraphBuilder</code> constructs the co-occurrence network.</p>"},{"location":"api_usage/#retrieve-articles","title":"Retrieve Articles","text":"<pre><code>from netmedex.pubtator import PubTatorAPI\n\ncollection = PubTatorAPI(\n    query='\"covid-19\" AND \"PON1\"',\n    sort=\"score\",\n    max_articles=100,\n).run()\n</code></pre>"},{"location":"api_usage/#save-and-load-collections","title":"Save and Load Collections","text":"<pre><code>import json\n\n# Save to JSON\nwith open(\"collection.json\", \"w\") as f:\n    json.dump(collection.to_json(), f)\n\n# Load from JSON\nfrom netmedex.pubtator_data import PubTatorCollection\nwith open(\"collection.json\") as f:\n    loaded = PubTatorCollection.from_json(json.load(f))\n\n# Or load from a PubTator file\nfrom netmedex.pubtator_parser import PubTatorIO\nloaded = PubTatorIO.parse(\"collection.pubtator\")\n</code></pre>"},{"location":"api_usage/#build-and-export-a-network","title":"Build and Export a Network","text":"<pre><code>from netmedex.graph import PubTatorGraphBuilder, save_graph\n\nbuilder = PubTatorGraphBuilder(node_type=\"all\")\nbuilder.add_collection(loaded)\ngraph = builder.build(weighting_method=\"freq\", edge_weight_cutoff=1)\n\nsave_graph(graph, \"network.html\", output_filetype=\"html\")\n</code></pre> <p>The notebook <code>notebooks/netmedex_usage.ipynb</code> contains a complete demonstration of these steps.</p>"},{"location":"cli_guides/","title":"CLI Guides","text":""},{"location":"cli_guides/#command-line-interface-cli","title":"Command-Line Interface (CLI)","text":"<p>To generate a network, run <code>netmedex search</code> first to retrieve relevant articles and then run <code>netmedex network</code> to generate the network.</p>"},{"location":"cli_guides/#search-pubmed-articles","title":"Search PubMed Articles","text":"<p>Use the CLI to search articles containing specific biological concepts via the PubTator3 API:</p> <pre><code># Query with keywords and sort articles by relevance (default: recency)\nnetmedex search -q '\"N-dimethylnitrosamine\" AND \"Metformin\"' [-o OUTPUT_FILEPATH] --sort score\n\n# Query with article PMIDs\nnetmedex search -p 34895069,35883435,34205807 [-o OUTPUT_FILEPATH]\n\n# Query with article PMIDs (from file)\nnetmedex search -f examples/pmids.txt [-o OUTPUT_FILEPATH]\n\n# Query with PubTator3 Entity ID and limit the number of articles to 100\nnetmedex search -q '\"@DISEASE_COVID_19\" AND \"@GENE_PON1\"' [-o OUTPUT_FILEPATH] --max_articles 100\n</code></pre> <p>Note: Use double quotes for keywords containing spaces and logical operators (e.g., AND/OR) to combine keywords.</p> <p>Available commands are detailed in Search Command.</p>"},{"location":"cli_guides/#generate-co-mention-networks","title":"Generate Co-Mention Networks","text":"<p>The PubTator file outputs from <code>netmedex search</code> is used to generate the network.</p> <pre><code># Use default parameters and set edge weight cutoff to 1\nnetmedex network -i examples/pmids_output.pubtator -o pmids_output.html -w 1\n\n# Keep MeSH terms and discard non-MeSH terms\nnetmedex network -i examples/pmids_output.pubtator -o pmids_output.html -w 1 --node_type mesh\n\n# Keep confident relations between entities\nnetmedex network -i examples/pmids_output.pubtator -o pmids_output.html -w 1 --node_type relation\n\n# Save the result in XGMML format for Cytoscape\nnetmedex network -i examples/pmids_output.pubtator -o pmids_output.xgmml -w 1 -f xgmml\n\n# Use normalized pointwise mutual information (NPMI) to weight edges\nnetmedex network -i examples/pmids_output.pubtator -o pmids_output.html -w 5 --weighting_method npmi\n</code></pre> <p>Available commands are detailed in Network Command.</p>"},{"location":"cli_guides/#view-the-network","title":"View the Network","text":"<ul> <li>HTML Output: Open in a browser to view the network.</li> <li>XGMML Output: Import into Cytoscape for further analysis.</li> </ul>"},{"location":"cli_guides/#available-commands","title":"Available Commands","text":""},{"location":"cli_guides/#general","title":"General","text":"<pre><code>usage: netmedex [-h] {search,network,run} ...\n\npositional arguments:\n  {search,network,run}\n    search              Search PubMed articles and obtain annotations\n    network             Build a network from annotations\n    run                 Run NetMedEx app\n\noptions:\n  -h, --help            Show this help message and exit\n</code></pre>"},{"location":"cli_guides/#search-command","title":"Search Command","text":"<pre><code>usage: netmedex search [-h] [-q QUERY] [-o OUTPUT] [-p PMIDS] [-f PMID_FILE] [-s {score,date}] [--max_articles MAX_ARTICLES] [--full_text]\n                       [--use_mesh] [--debug]\n\noptions:\n  -h, --help            show this help message and exit\n  -q QUERY, --query QUERY\n                        Query string\n  -o OUTPUT, --output OUTPUT\n                        Output path (default: [CURRENT_DIR].pubtator)\n  -p PMIDS, --pmids PMIDS\n                        PMIDs for the articles (comma-separated)\n  -f PMID_FILE, --pmid_file PMID_FILE\n                        Filepath to load PMIDs (one per line)\n  -s {score,date}, --sort {score,date}\n                        Sort articles in descending order by (default: date)\n  --max_articles MAX_ARTICLES\n                        Maximal articles to request from the searching result (default: 1000)\n  --full_text           Collect full-text annotations if available\n  --use_mesh            Use MeSH vocabulary instead of the most commonly used original text in articles\n  --debug               Print debug information\n</code></pre>"},{"location":"cli_guides/#network-command","title":"Network Command","text":"<pre><code>usage: netmedex network [-h] [-i INPUT] [-o OUTPUT] [-w CUT_WEIGHT] [-f {xgmml,html,json}] [--node_type {all,mesh,relation}]\n                        [--weighting_method {freq,npmi}] [--pmid_weight PMID_WEIGHT] [--debug] [--community] [--max_edges MAX_EDGES]\n\noptions:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Path to the pubtator file\n  -o OUTPUT, --output OUTPUT\n                        Output path (default: [INPUT_DIR].[FORMAT_EXT])\n  -w CUT_WEIGHT, --cut_weight CUT_WEIGHT\n                        Discard the edges with weight smaller than the specified value (default: 2)\n  -f {xgmml,html,json,pickle}, --format {xgmml,html,json,pickle}\n                        Output format (default: html)\n  --node_type {all,mesh,relation}\n                        Keep specific types of nodes (default: all)\n  --weighting_method {freq,npmi}\n                        Weighting method for network edge (default: freq)\n  --pmid_weight PMID_WEIGHT\n                        CSV file for the weight of the edge from a PMID (default: 1)\n  --debug               Print debug information\n  --community           Divide nodes into distinct communities by the Louvain method\n  --max_edges MAX_EDGES\n                        Maximum number of edges to display (default: 0, no limit)\n</code></pre> <p>More detailed explanation of each command is available in Reference.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#web-application-via-docker","title":"Web Application (via Docker)","text":"<p>If you have Docker installed on your machine, you can run the following command to launch the web application using Docker, then open <code>localhost:8050</code> in your browser:</p> <pre><code>docker run -p 8050:8050 --rm lsbnb/netmedex\n</code></pre>"},{"location":"installation/#installation","title":"Installation","text":"<p>Install NetMedEx from PyPI to use the web application locally or access the CLI or Python API:</p> <pre><code>pip install netmedex\n</code></pre> <p>We recommend using Python version &gt;= 3.11 for NetMedEx.</p>"},{"location":"installation/#web-application-local","title":"Web Application (Local)","text":"<p>After installing NetMedEx, run the following command and open <code>localhost:8050</code> in your browser:</p> <pre><code>netmedex run\n</code></pre>"},{"location":"installation/#command-line-interface-cli","title":"Command-Line Interface (CLI)","text":"<p>After installing NetMedEx, refer to CLI guides to use the following commands to search articles and generate networks:</p> <pre><code>netmedex search  # Search articles\nnetmedex network  # Generate networks from the output file produced by `netmedex search`\n</code></pre>"},{"location":"reference/","title":"Reference for Parameters in NetMedEx","text":""},{"location":"reference/#source-web-app-only","title":"Source (web app only)","text":"<ul> <li> <p><code>PubTator3 API</code>: Search articles and generate networks from biological annotations in the collected articles</p> </li> <li> <p><code>PubTator File</code>: Generate networks from the annotation file (PubTator File), available via the <code>PubTator</code> button (see Search Articles and Generate Networks).</p> </li> </ul>"},{"location":"reference/#search-type","title":"Search Type","text":"<p>CLI: <code>netmedex search</code></p> <ul> <li> <p><code>Text Search</code> (<code>-q</code>, <code>--query</code>): Use keywords to retrieve relevant articles </p> <ul> <li>Examples:<ul> <li>\"COVID 19\" AND \"PON1\"</li> <li>\"liver cancer\" AND \"sorafenib\"  </li> </ul> </li> <li>Note: Use double quotes to match whole words and AND/OR to combine keywords.</li> </ul> </li> <li> <p><code>PMID</code> (<code>-p</code>, <code>--pmids</code>): Retrieve articles by PubMed Identifier (PMID)</p> <ul> <li>Examples: 26578185,26952367</li> <li>Note: Separate PMIDs by commas.</li> </ul> </li> <li> <p><code>PMID File</code> (<code>-f</code>, <code>--pmid_file</code>): Retrieve articles by a text file of PMIDs</p> <ul> <li>Note: One PMID per line </li> </ul> </li> </ul>"},{"location":"reference/#sort","title":"Sort","text":"<p>CLI: <code>netmedex search</code></p> <ul> <li> <p><code>Relevance</code> (<code>--sort score</code>): Sort articles in descending order by relevance score (see how search results are prioritized in the PubTator3 Paper)</p> </li> <li> <p><code>Recency</code> (<code>--sort date</code>): Sort articles in descending order by publication date </p> </li> </ul> <p>This parameter affects the retrieved articles if the total number exceeds Max Articles.</p>"},{"location":"reference/#pubtator3-parameters","title":"PubTator3 Parameters","text":"<p>CLI: <code>netmedex search</code></p> <ul> <li> <p><code>Use MeSH Vocabulary</code> (<code>--mesh</code>): If enabled, standardize the text in the original content using MeSH vocabulary. If disabled, the text is lowercased and standardized using plural stemming.</p> </li> <li> <p><code>Full Text</code> (<code>--full_text</code>): If enabled, retrieve full-text annotations if available. If disabled, collect annotations from abstracts only.</p> <ul> <li>For articles where only abstracts are available, annotations will be collected from the abstracts. As a result, the network may be generated from a mix of full-text articles and abstracts if this parameter is enabled.</li> </ul> </li> </ul>"},{"location":"reference/#max-articles","title":"Max Articles","text":"<p>CLI: <code>netmedex search</code></p> <ul> <li><code>Max Articles</code> (<code>--max_articles</code>): Specify the maximum number of articles to retrieve.<ul> <li>This parameter applies to <code>Text Search</code> only. If search results exceed <code>MAX_ARTICLES</code>, only the top <code>MAX_ARTICLES</code> will be retrieved after sorting.</li> </ul> </li> </ul>"},{"location":"reference/#node-filter-node-type","title":"Node Filter (Node Type)","text":"<p>CLI: <code>netmedex network</code></p> <ul> <li> <p><code>All</code> (<code>--node_type all</code>): Retain all annotations (biological concepts with or without standardized MeSH terms).</p> </li> <li> <p><code>MeSH</code> (<code>--node_type mesh</code>): Retain annotations with standardized MeSH terms only.</p> </li> <li> <p><code>BioREx Relation</code> (<code>--node_type relation</code>): Retain only the annotations with high-confidence relationships as predicted by the BioREx model used in PubTator3. This results in a network that is not co-mention-based.</p> </li> </ul>"},{"location":"reference/#weighting-method","title":"Weighting Method","text":"<p>CLI: <code>netmedex network</code></p> <ul> <li> <p><code>Frequency</code> (<code>--weighting_method freq</code>): Calculate edge weights using co-occurrence counts.</p> </li> <li> <p><code>NPMI</code> (<code>--weighting_method npmi</code>): Calculate edge weights using normalized pointwise mutual information (NPMI).</p> <ul> <li>Edges will be assigned high weights if the concepts co-occur frequently. For exmaple, biological concepts that co-occur in only a few articles can still have a high edge weight if they almost always co-occur whenever each concept appears in an article.</li> <li>The calculated NPMI ranges from <code>-1</code> to <code>1</code>. The weight is set to <code>0</code> for negative values. </li> <li>This option is still experimental and requires further optimization.    </li> </ul> </li> </ul>"},{"location":"reference/#edge-weight-cutoff","title":"Edge Weight Cutoff","text":"<p>CLI: <code>netmedex network</code></p> <ul> <li><code>Edge Weight Cutoff</code> (<code>--cut_weight INT</code>): Set the minimum edge weight to filter the graph.<ul> <li>Raw edge weights (calculated using <code>Frequency</code> or <code>NPMI</code>) are scaled linearly between <code>0</code> and <code>20</code>. </li> <li>If set to <code>0</code>, all edges are included.</li> </ul> </li> </ul> <p>See also Max Edges, which directly limits the number of edges.</p>"},{"location":"reference/#max-edges","title":"Max Edges","text":"<ul> <li><code>Max Edges</code> (<code>--max_edges INT</code>): Set the maximum number of edges in the graph.<ul> <li>After sorting edges by weight, only the top <code>MAX_EDGES</code> are retained. Isolated nodes are removed.</li> <li>If set to <code>0</code>, all edges are included.</li> </ul> </li> </ul>"},{"location":"reference/#network-parameters","title":"Network Parameters","text":"<ul> <li> <p><code>Community</code> (<code>--community</code>): Group nodes into communities by the Louvain algorithm.</p> <ul> <li>In essence, the Louvain algorithm groups nodes into communities that maximize intra-community links and minimize inter-community links.</li> <li>This option is useful for visualizing dense networks.</li> <li>Edges between nodes in separate communities are collapsed into a single community edge.</li> <li>If enabled, the generated network currently cannot be exported in <code>XGMML</code> format.</li> </ul> </li> <li> <p><code>--pmid_weight PMID_WEIGHT_FILE</code> (CLI only): Path to the CSV file for the article weights.</p> </li> </ul> <p>Example CSV file (<code>pmid_weight.csv</code>):</p> <pre><code>26578185,1\n26952367,2\n</code></pre>"},{"location":"reference/#network-output-format","title":"Network Output Format","text":"<ul> <li> <p><code>HTML</code> (<code>--format html</code>): Export the network in HTML format.</p> </li> <li> <p><code>XGMML</code> (<code>--format xgmml</code>):  Export the network in a Cytoscape-compatible format.</p> <ul> <li>This generated file can be opened in Cytoscape for further analysis.</li> </ul> </li> <li> <p><code>--format json</code> (CLI only): Export the network info in JSON format.</p> </li> </ul>"},{"location":"reference/#network-visualization-tools-web-app-only","title":"Network Visualization Tools (web app only)","text":"<ul> <li> <p><code>Graph Layout</code>: Adjust the graph layout.</p> </li> <li> <p><code>Edge Weight Cutoff</code>: Dynamically adjust edge weight cutoff without resubmitting inputs. (See Edge Weight Cutoff)</p> </li> <li> <p><code>Minimum Node Degree</code>: Set the minimum node degree to filter the graph. </p> <ul> <li>This option is useful for identifying hubs and their connections. </li> </ul> </li> </ul>"},{"location":"web_app_guides/","title":"Web App Guides","text":""},{"location":"web_app_guides/#web-application","title":"Web Application","text":"<p>This is the typical interface when you open the app in your browser (<code>NetMedEx v0.3.0</code>).</p> <p></p> <p>Note: The interface may vary slightly between versions.</p> <p>The interface consists of a sidebar (background: ) and a region for network display (background: ).</p>"},{"location":"web_app_guides/#usage","title":"Usage","text":""},{"location":"web_app_guides/#search-articles-and-generate-networks-default","title":"Search Articles and Generate Networks (Default)","text":"<ol> <li>Select <code>PubTator3 API</code> in Source.</li> <li>Select your Search Type.</li> <li>Enter the corresponding inputs in the box below.</li> <li>Adjust parameters in the sidebar and in the config panel ( ) as needed (see Reference).</li> <li>Press <code>Submit</code>.</li> </ol> <p>Note for Step 3: If your search type is <code>Text Search</code>, use double quotes for keywords containing spaces and logical operators (e.g., AND/OR) to combine keywords. For example, \"COVID 19\" AND \"PON1\".</p> <p>Once the program finishes generating the network, the sidebar will switch to the Graph panel and the resulting network will be displayed on the right:</p> <p></p> <p>Note: In the default layout, some nodes may overlap. You can manually drag them to rearrange the network as desired.</p> <p>In the sidebar, you will find buttons to download the network or adjust settings:</p> <ul> <li><code>PubTator</code>: Download the corresponding PubTator file for reuse (see Generate Networks from PubTator Files).</li> <li><code>HTML</code>: Export the network in HTML format.</li> <li><code>XGMML</code>: Export the network in a Cytoscape-compatible format (see Network Output Format).</li> </ul> <p>Graph settings include graph layout, edge weight cutoff, minimum node degree, etc (see Network Visualization Tools).</p> <p>Tip: Adjusting <code>edge weight cutoff</code> is particularly useful if you think the current network is overcrowded or too sparse.</p>"},{"location":"web_app_guides/#interactive-network","title":"Interactive Network","text":"<p>The nodes in the network can be dragged around. Additionally, when you click on an edge, its information is displayed in the box at the bottom.</p> <p></p> <p>The evidence for the co-occurrence of two biological concepts that constitute the edge will be displayed as a table. This table is available as a CSV file.</p> <p>If the <code>Community</code> parameter is enabled, the edges between nodes in different communities will be collapsed into a single community edge, which may include a long list of articles. To identify the evidence for nodes in separate communities, please disable the <code>Community</code> parameter and generate the network again.</p>"},{"location":"web_app_guides/#generate-networks-from-pubtator-files","title":"Generate Networks from PubTator Files","text":"<p>The downloaded PubTator files can be reused to generate networks without performing article searches. To generate networks from PubTator files:</p> <ol> <li>Switch to the <code>Search</code> panel and select <code>PubTator File</code> in Source.</li> <li>Upload the PubTator file.</li> <li>Adjust the parameters as needed (see Reference).</li> <li>Press <code>Submit</code>.</li> </ol>"},{"location":"use_cases/","title":"User Guides","text":"<p>This section demonstrates typical usage of NetMedEx.</p>"},{"location":"use_cases/text_query/","title":"Use Text Queries to Search Articles and Generate Networks","text":""},{"location":"use_cases/text_query/#example-find-articles-relevant-to-n-dimethylnitrosamine-and-metformin","title":"Example: Find articles relevant to \"N-dimethylnitrosamine\" and \"Metformin\"","text":""},{"location":"use_cases/text_query/#steps","title":"Steps","text":"<p>Use the command <code>netmedex search</code> to retrieve articles. Here, we limit the results to the top 100 most recent articles by <code>--sort date</code> and <code>--max_articles 100</code>.</p> <pre><code>netmedex search -q '\"N-dimethylnitrosamine\" AND \"Metformin\"' -o ./output.pubtator --sort date --max_articles 100\n</code></pre> <p>Generate the network graph using <code>netmedex network</code> and save as an HTML file.</p> <pre><code>netmedex network -i ./output.pubtator -o ./output.html -f html -w 2\n</code></pre> <p>Result </p>"}]}